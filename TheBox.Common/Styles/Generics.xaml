<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Local="clr-namepsace:TheBox.Common"
                    xmlns:UI="clr-namespace:TheBox.Common.UI">



    <SolidColorBrush x:Key="DefaultBackground" Color="#141414" />
    
    <SolidColorBrush x:Key="DefaultBlue" Color="#111" />
    <SolidColorBrush x:Key="SpinnerColour" Color="#FF4D4DF9" />

    <SolidColorBrush x:Key="Primary" Color="Red"></SolidColorBrush>

    <!-- top menu button (blue) -->
    <SolidColorBrush Color="#111" Opacity="0.2" x:Key="TopButtonColour" />

    <!-- top menu button hover (gold) -->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="TopButtonHoverColour">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform Angle="62.65" CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FFD8D8D8" Offset="0.468"/>
        <GradientStop Color="#FFDEDEDE" Offset="0.546"/>
    </LinearGradientBrush>

    <!-- top menu button hover (silver) -->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="TopButtonHoverNotSelectedColour">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform Angle="62.65" CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FF848484" Offset="0.468"/>
        <GradientStop Color="#FF808080" Offset="0.546"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TopButtonIconColour" Color="#FFDEDEDE" />
    <SolidColorBrush x:Key="TopButtonIconHoverColour" Color="Blue" />


    <Style TargetType="{x:Type UI:MetroButtonWithIcon}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Background" Value="{StaticResource TopButtonColour}" />
        <Setter Property="Foreground" Value="{StaticResource TopButtonIconColour}" />
        <Setter Property="IconColour" Value="{StaticResource TopButtonIconColour}" />
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:MetroButtonWithIcon}">

                    <Grid Name="ButtonGrid" 
                          HorizontalAlignment="Stretch" 
                          Margin="0"
                          Background="{TemplateBinding Background}">
                        <Viewbox HorizontalAlignment="Left"
                                 >
                            <StackPanel Orientation="Horizontal" 
                                        Margin="0" 
                                        HorizontalAlignment="Left">
                                <Rectangle x:Name="ButtonRectangle" 
                                           Fill="{TemplateBinding IconColour}" 
                                           HorizontalAlignment="Left" 
                                           Width="5" 
                                           Height="5" 
                                           Margin="3,3,3,3">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{Binding Visual, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Text="{TemplateBinding Content}" 
                                            Height="6"
                                            FontSize="4" 
                                            Margin="3,3,15,3"
                                            Foreground="{TemplateBinding Foreground}" 
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" />
                            </StackPanel>
                        </Viewbox>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Gold -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ParentSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource TopButtonHoverColour}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="IconColour" Value="Black" />
            </MultiTrigger>
            <!-- Silver -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ParentSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource TopButtonHoverNotSelectedColour}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="IconColour" Value="Black" />
            </MultiTrigger>
            <!-- Mouse -->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TopButtonHoverColour}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="IconColour" Value="Black" />
            </Trigger>-->
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type UI:TileButton}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#FF373737"/>
                    <GradientStop Color="#FF434343" Offset="1"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Background" Value="DarkGray"></Setter>-->
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="SelectedBorderColour" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:TileButton}">
                    <Border BorderThickness="5"
                            BorderBrush="{TemplateBinding SelectedBorderColour}">
                        <Border BorderThickness="5"
                                BorderBrush="Transparent">
                            <Grid Name="OuterGrid">
                                <Grid Background="{TemplateBinding Background}">
                                    <!--<Grid 
                                          Width="100"
                                            Height="100">
                                        <Grid.Background>
                                            <ImageBrush  ImageSource="{TemplateBinding TileImage}" Stretch="Fill"></ImageBrush>
                                        </Grid.Background>
                                    </Grid>-->

                                    <Viewbox Stretch="Fill"
                                             HorizontalAlignment="Stretch">
                                        <!--Width="{Binding ElementName=OuterGrid,Path=ActualWidth}"
                                           Height="{Binding ElementName=OuterGrid,Path=ActualHeight}"-->
                                    <Image Source="{TemplateBinding TileImage}"                                
                                           StretchDirection="Both"
                                           HorizontalAlignment="Stretch"
                                           Width="50"
                                           Stretch="UniformToFill" 
                                           ></Image>
                                    </Viewbox>
                                    <Viewbox Stretch="UniformToFill">
                                        <DockPanel Width="100"
                                                   >
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{TemplateBinding Content}" 
                                                       Height="60"
                                                       Width="40"
                                                       FontSize="5"
                                                       Margin="0"                                                   
                                                       Foreground="{TemplateBinding Foreground}" 
                                                       HorizontalAlignment="Left"
                                                       TextAlignment="Left"
                                                       TextWrapping="Wrap"
                                                       VerticalAlignment="Top" />
                                            </StackPanel>
                                        </DockPanel>
                                    </Viewbox>
                                </Grid>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="SelectedBorderColour" Value="Red"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>




    <!-- menu button (blue) -->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="MenuButtonColour">
        <GradientStop Color="#FF242424" Offset="0.468"/>
        <GradientStop Color="#FF222222" Offset="0.546"/>
    </LinearGradientBrush>

    <!-- menu button (blue) odd -->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="MenuButtonColourOdd">
        <GradientStop Color="#FF10145B" Offset="0.468"/>
        <GradientStop Color="#FF051653" Offset="0.546"/>
    </LinearGradientBrush>

    <!-- menu button hover (gold) -->
    <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="MenuButtonHoverColour">
        <GradientStop Color="#FFE4DA18" Offset="0.468"/>
        <GradientStop Color="#FFEACA00" Offset="0.546"/>
    </LinearGradientBrush>-->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="MenuButtonHoverColour">
        <GradientStop Color="#f71515 " Offset="0.468"/>
        <GradientStop Color="#d90000 " Offset="0.546"/>
    </LinearGradientBrush>
    
    
    <!-- menu button hover (silver) -->
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="MenuButtonHoverNotSelectedColour">
        <GradientStop Color="#FFA4A4A4" Offset="0.468"/>
        <GradientStop Color="#FFB0B0B0" Offset="0.546"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type UI:IBoxMenuButton}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Background" Value="{StaticResource MenuButtonColour}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:IBoxMenuButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" Margin="2">
                        <Grid HorizontalAlignment="Left">
                            <Viewbox HorizontalAlignment="Stretch">
                                <TextBlock Foreground="{TemplateBinding Foreground}" 
                                           HorizontalAlignment="{TemplateBinding TextAlignment}" 
                                           Margin="4" 
                                           Text="{TemplateBinding Content}" />
                            </Viewbox>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Odd" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuButtonColourOdd}" />
            </Trigger>
            <!-- Gold -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ParentSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource MenuButtonHoverColour}" />
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
            <!-- Silver -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="ParentSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource MenuButtonHoverNotSelectedColour}" />
                <Setter Property="Foreground" Value="Black" />
            </MultiTrigger>
            <!-- Mouse -->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuButtonHoverColour}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>-->
        </Style.Triggers>
    </Style>




    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    

</ResourceDictionary>